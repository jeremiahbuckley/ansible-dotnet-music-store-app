- hosts: tag_role_webservers:&tag_app_rolling_app
  become: yes
  become_user: root
  serial: "50%"

  pre_tasks:
  - name: disable the server in haproxy
    command: echo "disable server habackend/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
    delegate_to: "{{ item }}"
    with_items: "{{ groups.tag_role_lbservers }}"

  roles:
  - geerlingguy.nginx

  post_tasks:
  - name: enable the server in haproxy
    command: echo "enable server habackend/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
    delegate_to: "{{ item }}"
    with_items: "{{ groups.tag_role_lbservers }}"




- name: get sql server details
  hosts: '*sql_server'
  vars:
    ansible_port: 5986
    ansible_connection: winrm
    ansible_winrm_transport: credssp
    ansible_winrm_server_cert_validation: ignore
  pre_tasks:
    - name: set ad server ip
      add_host:
        name: sql_server
        ip_address:  "{{ ansible_ip_addresses[0] | default(ansible_host) | default(ansible_ssh_host) }}"

    - debug:
        var: hostvars['sql_server']['ip_address']

- name: rolling update
  hosts: '*iis'
  serial: "50%"
  vars:
    ansible_port: 5986
    ansible_connection: winrm
    ansible_winrm_transport: credssp
    ansible_winrm_server_cert_validation: ignore

  pre_tasks:

    - name: set ip address of sql server
      set_fact:
        sql_server_ip_address: "{{ hostvars['sql_server']['ip_address'] }}"
      when:
        - hostvars['sql_server']['ip_address'] is defined

    - name: disable the server in load balancer
      command: echo "disable server habackend/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.tag_role_lbservers }}"

  roles:
    - music-store-iis

  post_tasks:

    - name: enable the server in haproxy
      command: echo "enable server habackend/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.tag_role_lbservers }}"
