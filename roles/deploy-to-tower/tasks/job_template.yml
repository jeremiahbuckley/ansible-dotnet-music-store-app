---


- name: create aws windows machine credentials
  tower_credential:
    name: aws-windows-machine
    username: 'Administrator'
    password: "{{ ansible_ssh_password | default(ansible_password) | default(omit) }}"
    kind: ssh
    organization: Default
    state: present
    tower_host: '{{ tower_host }}'
    tower_username: '{{ tower_username }}'
    tower_password: '{{ tower_password }}'
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: reg_credential_aws_windows_machine

- name: create aws credentials
  tower_credential:
    name: aws-demo
    username: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(omit) }}"
    password: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(omit) }}"
    kind: aws
    organization: Default
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    state: present
    tower_host: '{{ tower_host }}'
    tower_username: '{{ tower_username }}'
    tower_password: '{{ tower_password }}'
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: reg_credential_aws_demo

- block:
    - name: create rolling update job template
      tower_job_template:
        name: Music Store Rolling Update
        description: Music Store Rolling Update
        job_type: run
        inventory: aws-windows-demo
        project: ansible-dotnet-music-store-app
        playbook: rolling-update.yml
        #organization: Default
        credential: aws-windows-machine
        limit: tag_app_music_store_demo
        state: present
        tower_host: '{{ tower_host }}'
        tower_username: '{{ tower_username }}'
        tower_password: '{{ tower_password }}'
        tower_verify_ssl: '{{ tower_verify_ssl }}'
      register: reg_job_template_rolling_update

  rescue:
    - name: create rolling update job template
      uri:
        method: POST
        url: "https://{{ tower_host }}/api/v2/job_templates/"
        user: "{{ tower_username }}"
        password: "{{ tower_password }}"
        validate_certs: "{{ tower_verify_ssl|bool }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body: "{{ body | to_json }}"
        body_format: json
        status_code:
          - 200
          - 201
      register: reg_job_template_rolling_update
      ignore_errors: yes
      vars:
        body:
          name: Music Store Rolling Update
          description: Music Store Rolling Update
          job_type: run
          inventory: aws-windows-demo
          project: ansible-dotnet-music-store-app
          playbook: rolling-update.yml
          credential: aws-windows-machine
          limit: tag_app_music_store_demo